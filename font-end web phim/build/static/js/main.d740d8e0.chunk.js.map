{"version":3,"sources":["pages/browse/banner/BannerMovie.js","pages/browse/banner/Banner.js","pages/browse/moviedetail/MovieTrailer.js","pages/browse/moviedetail/MovieDetail.js","hook/use-Movie.js","pages/browse/movielist/abc/MovieCP2.js","pages/browse/movielist/abc/ListMovieCP2.js","pages/browse/movielist/Originals.js","pages/browse/movielist/MovieCP.js","pages/browse/movielist/ListMovieCP.js","pages/browse/movielist/TopRated.js","pages/browse/movielist/Trending.js","pages/browse/movielist/Action.js","pages/browse/movielist/ComedyMovies.js","pages/browse/movielist/HorrorMovies.js","pages/browse/movielist/RomanceMovies.js","pages/browse/movielist/Documentaries.js","pages/browse/movielist/MovieList.js","pages/browse/navbar/NavBar.js","pages/browse/Browse.jsx","pages/search/SearchForm.js","pages/search/MovieCP3.js","pages/search/ListMovieCP3.js","pages/search/ResultList.js","pages/search/MovieTrailer2.js","pages/search/MovieDetail2.js","pages/search/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["BannerMovie","props","name","overview","BannerFont","styled","div","img","Banner","useState","banner","setBanner","error","setError","fetchMoviesHandler","useCallback","fetch","item","response","ok","Error","json","data","console","log","transformedMovies","results","map","movieData","id","backdrop_path","poster","poster_path","bannerMovie","Math","floor","random","length","bannerMovie2","undefined","masage","useEffect","React","memo","setData","sendRequest2","API","key","dataTrailer","push","site","type","message","filterTrailer","filter","x","Fragment","width","height","src","backdrop","title","MovieDetailFont","MovieDetail","closes","useContext","contextdata","date","date2","vote","showHandler","className","onClick","openDetail","useMovie","applyData","isLoading","setIsLoading","sendRequest","requestConfig","url","first_air_date","release_date","vote_average","MovieCP2","test","handler","alt","ListMovieCP2","movies","OriginalFont","Originals","movie","setMovie","dataMovie","dataObj","fetchMovie","MovieCP","ListMovieCP","MovieListFont","TopRated","TrendingFont","Trending","Action","ComedyMovies","HorrorMovies","RomanceMovies","Documentaries","MovieList","originals","trending","topRated","actionMovies","comedyMovies","horrorMovies","romanceMovies","documentaries","backHome","window","location","replace","goSearch","FontNavbar","NavBar","scroll","setScroll","onscroll","document","documentElement","scrollTop","style","background","fill","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","d","createContext","Browse","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchSearch","setHandler","Provider","value","SearchFormFont","SearchForm","values","setValues","search","searchFilm","onChange","event","target","MovieCP3","trailerDetailSearch","dataDetail","ListMovieCP3","ResultList","KEY","MovieDetail2","SearchFont","Search","nameFilm","setNameFilm","setDataDetail","App","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d740d8e0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst BannerMovie = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <h1>{props.name}</h1>\r\n      <button>Play</button>\r\n      <button>MyList</button>\r\n      <p>{props.overview}</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BannerMovie;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BannerMovie from \"./BannerMovie\";\r\n\r\nconst BannerFont = styled.div`\r\n  width: 100%;\r\n  min-height: 400px;\r\n  background-image: url(${(props) =>\r\n    \"https://image.tmdb.org/t/p/w500\" + props.img});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  padding-top: 25%;\r\n  padding-top: 5%;\r\n\r\n  & h1 {\r\n    margin-top: 5%;\r\n    width: 40%;\r\n    margin-left: 2%;\r\n    color: white;\r\n  }\r\n\r\n  & button {\r\n    width: 10%;\r\n    height: 40px;\r\n    margin-left: 2%;\r\n    background-color: rgba(5, 5, 4, 0.638);\r\n    color: white;\r\n  }\r\n\r\n  & p {\r\n    width: 40%;\r\n    height: 60px;\r\n    margin-left: 2%;\r\n    color: white;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n`;\r\n\r\nconst Banner = (props) => {\r\n  const [banner, setBanner] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchMoviesHandler = useCallback(async () => {\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(`https://api.themoviedb.org/3${props.item}`);\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const data = await response.json();\r\n\r\n      console.log(data);\r\n\r\n      const transformedMovies = data.results.map((movieData) => {\r\n        return {\r\n          id: movieData.id,\r\n          name: movieData.name,\r\n          overview: movieData.overview,\r\n          backdrop_path: movieData.backdrop_path,\r\n          poster: movieData.poster_path,\r\n        };\r\n      });\r\n\r\n      const bannerMovie =\r\n        transformedMovies[\r\n          Math.floor(Math.random() * transformedMovies.length - 1)\r\n        ];\r\n\r\n      const bannerMovie2 =\r\n        transformedMovies[\r\n          Math.floor(Math.random() * transformedMovies.length + 1)\r\n        ];\r\n\r\n      console.log(bannerMovie);\r\n\r\n      if (bannerMovie !== undefined) {\r\n        setBanner(bannerMovie);\r\n      } else {\r\n        setBanner(bannerMovie2);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.masage);\r\n    }\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    fetchMoviesHandler();\r\n  }, [fetchMoviesHandler]);\r\n\r\n  return (\r\n    <BannerFont img={banner.backdrop_path}>\r\n      {!error && <BannerMovie name={banner.name} overview={banner.overview} />}\r\n      {error && <p>{error}</p>}\r\n    </BannerFont>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nconst MovieTrailer = (props) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const sendRequest2 = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3//movie/${props.id}}/videos?api_key=${props.API}`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n      const data = await response.json();\r\n\r\n      const dataTrailer = [];\r\n\r\n      for (const key in data.results) {\r\n        dataTrailer.push({\r\n          site: data.results[key].site,\r\n          key: data.results[key].key,\r\n          type: data.results[key].type,\r\n        });\r\n      }\r\n\r\n      setData(dataTrailer);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    sendRequest2();\r\n  }, [sendRequest2]);\r\n\r\n  const filterTrailer = data.filter((x) => {\r\n    return x.site === \"YouTube\" && x.type === (\"Trailer\" || \"Teaser\");\r\n  });\r\n\r\n  const video = () => {\r\n    if (filterTrailer.length > 0) {\r\n      return \"https://www.youtube.com/embed/\" + filterTrailer[0].key;\r\n    } else {\r\n      return \"https://image.tmdb.org/t/p/w500\" + props.backdrop;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <iframe width=\"100%\" height=\"400\" src={video()} title=\"trailer\"></iframe>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default React.memo(MovieTrailer);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MovieTrailer from \"./MovieTrailer\";\r\nimport { useContext } from \"react\";\r\nimport { contextdata } from \"../Browse\";\r\n\r\nconst MovieDetailFont = styled.div`\r\n  display: ${(props) => (props.item === true ? \"block\" : \"none\")};\r\n  width: 100%;\r\n\r\n  .div1 {\r\n    width: 100%;\r\n    display: flex;\r\n    background-color: black;\r\n    overflow: hidden;\r\n    position: fixed;\r\n    top: 40%;\r\n    left: 0%;\r\n    height: 60%;\r\n  }\r\n\r\n  .div2 {\r\n    width: 50%;\r\n    color: white;\r\n  }\r\n  .div2 h1 {\r\n    border-bottom-style: solid;\r\n    border-bottom-width: 5px;\r\n    border-color: gray;\r\n  }\r\n\r\n  .div3 {\r\n    width: 50%;\r\n    align-self: center;\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nconst MovieDetail = (props) => {\r\n  const closes = useContext(contextdata);\r\n\r\n  const close = () => closes.openDetail(null);\r\n\r\n  let name = \"name\";\r\n  if (props.movieData) {\r\n    name =\r\n      props.movieData.name !== undefined\r\n        ? props.movieData.name\r\n        : props.movieData.title;\r\n  }\r\n  let date = \"date\";\r\n  if (props.movieData) {\r\n    date =\r\n      props.movieData.date !== undefined\r\n        ? props.movieData.date\r\n        : props.movieData.date2;\r\n  }\r\n  let vote = \"vote\";\r\n  if (props.movieData) {\r\n    vote = props.movieData.vote;\r\n  }\r\n  let overview = \"overview\";\r\n  if (props.movieData) {\r\n    overview = props.movieData.overview;\r\n  }\r\n\r\n  return (\r\n    <MovieDetailFont item={props.showHandler}>\r\n      <div className=\"div1\">\r\n        <div className=\"div2\">\r\n          <h1>{name}</h1>\r\n          <h4>{date}</h4>\r\n          <h4>{vote}/10</h4>\r\n          <p>{overview}</p>\r\n        </div>\r\n        <div className=\"div3\">\r\n          <button onClick={close}>\r\n            <b>Closes</b>\r\n          </button>\r\n          <MovieTrailer\r\n            API={props.API}\r\n            id={props.movieData ? props.movieData.id : \"\"}\r\n            backdrop={props.movieData ? props.movieData.backdrop : \"\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </MovieDetailFont>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nconst useMovie = (applyData) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequest = useCallback(\r\n    async (requestConfig) => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        const response = await fetch(requestConfig.url);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Request failed!\");\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        const transformedMovies = [];\r\n\r\n        for (const key in data.results) {\r\n          transformedMovies.push({\r\n            id: data.results[key].id,\r\n            name: data.results[key].name,\r\n            backdrop: data.results[key].backdrop_path,\r\n            poster: data.results[key].poster_path,\r\n            date: data.results[key].first_air_date,\r\n            date2: data.results[key].release_date,\r\n            vote: data.results[key].vote_average,\r\n            overview: data.results[key].overview,\r\n            title: data.results[key].title,\r\n          });\r\n        }\r\n\r\n        applyData(transformedMovies);\r\n      } catch (err) {\r\n        setError(err.message || \"Something went wrong!\");\r\n      }\r\n      setIsLoading(false);\r\n    },\r\n    [applyData]\r\n  );\r\n\r\n  return {\r\n    isLoading: isLoading,\r\n    error: error,\r\n    sendRequest: sendRequest,\r\n  };\r\n};\r\n\r\nexport default useMovie;\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { contextdata } from \"../../Browse\";\r\n\r\nconst MovieCP2 = (props) => {\r\n  const test = useContext(contextdata);\r\n\r\n  const openDetail = () => {\r\n    test.openDetail({\r\n      key: props.id,\r\n      id: props.id,\r\n      backdrop: props.backdrop,\r\n      name: props.name,\r\n      date: props.date,\r\n      date2: props.date2,\r\n      vote: props.vote,\r\n      overview: props.overview,\r\n      title: props.title,\r\n    });\r\n  };\r\n\r\n  const closeDetail = () => {\r\n    test.openDetail(null);\r\n  };\r\n\r\n  return (\r\n    <li\r\n      onClick={\r\n        (test.handler === null && openDetail) ||\r\n        (test.handler.id && test.handler.id !== props.id && openDetail) ||\r\n        (test.handler.id && test.handler.id === props.id && closeDetail)\r\n      }\r\n    >\r\n      <img\r\n        src={\"https://image.tmdb.org/t/p/w500\" + props.backdrop}\r\n        alt={props.name}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MovieCP2;\r\n","import React from \"react\";\r\nimport MovieCP2 from \"./MovieCP2\";\r\n\r\nconst ListMovieCP2 = (props) => {\r\n  return (\r\n    <ul>\r\n      {props.movies &&\r\n        props.movies.map((data) => (\r\n          <MovieCP2\r\n            key={data.id}\r\n            id={data.id}\r\n            backdrop={data.poster}\r\n            name={data.name}\r\n            date={data.date}\r\n            date2={data.date2}\r\n            vote={data.vote}\r\n            overview={data.overview}\r\n            title={data.title}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListMovieCP2;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport useMovie from \"../../../hook/use-Movie\";\r\nimport ListMovieCP2 from \"./abc/ListMovieCP2\";\r\nimport styled from \"styled-components\";\r\n\r\nconst OriginalFont = styled.div`\r\n  width: 100%;\r\n  height: 470px;\r\n  overflow-x: scroll;\r\n\r\n  & h1 {\r\n    color: white;\r\n    user-select: none;\r\n  }\r\n\r\n  & ul {\r\n    width: auto;\r\n    padding-left: 0;\r\n    list-style: none;\r\n    display: grid;\r\n    gap: 6px;\r\n    grid-auto-flow: column;\r\n    grid-auto-columns: 14.5%;\r\n    user-select: none;\r\n  }\r\n\r\n  & li {\r\n    max-width: 100%;\r\n    overflow: hidden;\r\n  }\r\n\r\n  & img {\r\n    max-width: 100%;\r\n  }\r\n\r\n  & li:hover img {\r\n    max-width: 105%;\r\n    transition: all 0.3s ease-in-out;\r\n  }\r\n`;\r\n\r\nconst Originals = (props) => {\r\n  const [movie, setMovie] = useState();\r\n  const dataMovie = useCallback((dataObj) => {\r\n    setMovie(dataObj);\r\n  }, []);\r\n\r\n  const { sendRequest: fetchMovie } = useMovie(dataMovie);\r\n\r\n  useEffect(() => {\r\n    fetchMovie({\r\n      url: `https://api.themoviedb.org/3${props.item}`,\r\n    });\r\n  }, [fetchMovie, props.item]);\r\n\r\n  return (\r\n    <OriginalFont>\r\n      <h1>Original</h1>\r\n      <ListMovieCP2 movies={movie} />\r\n    </OriginalFont>\r\n  );\r\n};\r\n\r\nexport default Originals;\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { contextdata } from \"../Browse\";\r\n\r\nconst MovieCP = (props) => {\r\n  const test = useContext(contextdata);\r\n\r\n  const openDetail = () => {\r\n    test.openDetail({\r\n      key: props.id,\r\n      id: props.id,\r\n      backdrop: props.backdrop,\r\n      name: props.name,\r\n      date: props.date,\r\n      date2: props.date2,\r\n      vote: props.vote,\r\n      overview: props.overview,\r\n      title: props.title,\r\n    });\r\n  };\r\n\r\n  const closeDetail = () => {\r\n    test.openDetail(null);\r\n  };\r\n\r\n  return (\r\n    <li\r\n      onClick={\r\n        (test.handler === null && openDetail) ||\r\n        (test.handler.id && test.handler.id !== props.id && openDetail) ||\r\n        (test.handler.id && test.handler.id === props.id && closeDetail)\r\n      }\r\n    >\r\n      <img\r\n        src={\"https://image.tmdb.org/t/p/w500\" + props.backdrop}\r\n        alt={props.name}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MovieCP;\r\n","import React from \"react\";\r\nimport MovieCP from \"./MovieCP\";\r\n\r\nconst ListMovieCP = (props) => {\r\n  return (\r\n    <ul>\r\n      {props.movies &&\r\n        props.movies.map((data) => (\r\n          <MovieCP\r\n            key={data.id}\r\n            id={data.id}\r\n            backdrop={data.backdrop}\r\n            name={data.name}\r\n            date={data.date}\r\n            date2={data.date2}\r\n            vote={data.vote}\r\n            overview={data.overview}\r\n            title={data.title}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListMovieCP;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport useMovie from \"../../../hook/use-Movie\";\r\nimport ListMovieCP from \"./ListMovieCP\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MovieListFont = styled.div`\r\n  width: 100%;\r\n  height: 250px;\r\n  overflow-x: scroll;\r\n  user-select: none;\r\n  & h1 {\r\n    color: white;\r\n  }\r\n\r\n  & ul {\r\n    width: auto;\r\n    padding-left: 0;\r\n    list-style: none;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-auto-columns: 14.5%;\r\n  }\r\n\r\n  & li {\r\n    max-width: 100%;\r\n    overflow: hidden;\r\n  }\r\n  & img {\r\n    max-width: 95%;\r\n  }\r\n\r\n  & li:hover img {\r\n    max-width: 100%;\r\n    transition: all 0.3s ease-in-out;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst TopRated = (props) => {\r\n  const [movie, setMovie] = useState();\r\n  const dataMovie = useCallback((dataObj) => {\r\n    setMovie(dataObj);\r\n  }, []);\r\n\r\n  const { sendRequest: fetchMovie } = useMovie(dataMovie);\r\n\r\n  useEffect(() => {\r\n    fetchMovie({\r\n      url: `https://api.themoviedb.org/3${props.item}`,\r\n    });\r\n  }, [fetchMovie, props.item]);\r\n\r\n  return (\r\n    <MovieListFont>\r\n      <h1>Xếp hạng cao nhât</h1>\r\n      <ListMovieCP movies={movie} />\r\n    </MovieListFont>\r\n  );\r\n};\r\n\r\nexport default TopRated;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport useMovie from \"../../../hook/use-Movie\";\r\nimport ListMovieCP from \"./ListMovieCP\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TrendingFont = styled.div`\r\n  width: 100%;\r\n  height: 250px;\r\n  overflow-x: scroll;\r\n  user-select: none;\r\n\r\n  & h1 {\r\n    color: white;\r\n  }\r\n\r\n  & ul {\r\n    width: auto;\r\n    padding-left: 0;\r\n    list-style: none;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-auto-columns: 14.5%;\r\n  }\r\n\r\n  & li {\r\n    max-width: 100%;\r\n    overflow: hidden;\r\n  }\r\n  & img {\r\n    max-width: 95%;\r\n  }\r\n\r\n  & li:hover img {\r\n    max-width: 100%;\r\n    transition: all 0.3s ease-in-out;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Trending = (props) => {\r\n  const [movie, setMovie] = useState();\r\n  const dataMovie = useCallback((dataObj) => {\r\n    setMovie(dataObj);\r\n  }, []);\r\n\r\n  const { sendRequest: fetchMovie } = useMovie(dataMovie);\r\n\r\n  useEffect(() => {\r\n    fetchMovie({\r\n      url: `https://api.themoviedb.org/3${props.item}`,\r\n    });\r\n  }, [fetchMovie, props.item]);\r\n\r\n  return (\r\n    <TrendingFont>\r\n      <h1>Xu hướng</h1>\r\n      <ListMovieCP movies={movie} />\r\n    </TrendingFont>\r\n  );\r\n};\r\n\r\nexport default Trending;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport useMovie from \"../../../hook/use-Movie\";\r\nimport ListMovieCP from \"./ListMovieCP\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MovieListFont = styled.div`\r\n  width: 100%;\r\n  height: 250px;\r\n  overflow-x: scroll;\r\n\r\n  & h1 {\r\n    color: white;\r\n    user-select: none;\r\n  }\r\n\r\n  & ul {\r\n    width: auto;\r\n    padding-left: 0;\r\n    list-style: none;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-auto-columns: 14.5%;\r\n    user-select: none;\r\n  }\r\n\r\n  & li {\r\n    max-width: 100%;\r\n    overflow: hidden;\r\n  }\r\n  & img {\r\n    max-width: 95%;\r\n  }\r\n\r\n  & li:hover img {\r\n    max-width: 100%;\r\n    transition: all 0.3s ease-in-out;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Action = (props) => {\r\n  const [movie, setMovie] = useState();\r\n  const dataMovie = useCallback((dataObj) => {\r\n    setMovie(dataObj);\r\n  }, []);\r\n  const { sendRequest: fetchMovie } = useMovie(dataMovie);\r\n\r\n  useEffect(() => {\r\n    fetchMovie({\r\n      url: `https://api.themoviedb.org/3${props.item}`,\r\n    });\r\n  }, [fetchMovie, props.item]);\r\n\r\n  return (\r\n    <MovieListFont>\r\n      <h1>Phim hành động</h1>\r\n      <ListMovieCP movies={movie} />\r\n    </MovieListFont>\r\n  );\r\n};\r\n\r\nexport default Action;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport useMovie from \"../../../hook/use-Movie\";\r\nimport ListMovieCP from \"./ListMovieCP\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MovieListFont = styled.div`\r\n  width: 100%;\r\n  height: 250px;\r\n  overflow-x: scroll;\r\n\r\n  & h1 {\r\n    color: white;\r\n    user-select: none;\r\n  }\r\n\r\n  & ul {\r\n    width: auto;\r\n    padding-left: 0;\r\n    list-style: none;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-auto-columns: 14.5%;\r\n    user-select: none;\r\n  }\r\n\r\n  & li {\r\n    max-width: 100%;\r\n    overflow: hidden;\r\n  }\r\n  & img {\r\n    max-width: 95%;\r\n  }\r\n\r\n  & li:hover img {\r\n    max-width: 100%;\r\n    transition: all 0.3s ease-in-out;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst ComedyMovies = (props) => {\r\n  const [movie, setMovie] = useState();\r\n  const dataMovie = useCallback((dataObj) => {\r\n    setMovie(dataObj);\r\n  }, []);\r\n\r\n  const { sendRequest: fetchMovie } = useMovie(dataMovie);\r\n\r\n  useEffect(() => {\r\n    fetchMovie({\r\n      url: `https://api.themoviedb.org/3${props.item}`,\r\n    });\r\n  }, [fetchMovie, props.item]);\r\n\r\n  return (\r\n    <MovieListFont>\r\n      <h1>Phim hài</h1>\r\n      <ListMovieCP movies={movie} />\r\n    </MovieListFont>\r\n  );\r\n};\r\n\r\nexport default ComedyMovies;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport useMovie from \"../../../hook/use-Movie\";\r\nimport ListMovieCP from \"./ListMovieCP\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MovieListFont = styled.div`\r\n  width: 100%;\r\n  height: 250px;\r\n  overflow-x: scroll;\r\n  user-select: none;\r\n\r\n  & h1 {\r\n    color: white;\r\n  }\r\n\r\n  & ul {\r\n    width: auto;\r\n    padding-left: 0;\r\n    list-style: none;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-auto-columns: 14.5%;\r\n  }\r\n\r\n  & li {\r\n    max-width: 100%;\r\n    overflow: hidden;\r\n  }\r\n  & img {\r\n    max-width: 95%;\r\n  }\r\n\r\n  & li:hover img {\r\n    max-width: 100%;\r\n    transition: all 0.3s ease-in-out;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst HorrorMovies = (props) => {\r\n  const [movie, setMovie] = useState();\r\n  const dataMovie = useCallback((dataObj) => {\r\n    setMovie(dataObj);\r\n  }, []);\r\n\r\n  const { sendRequest: fetchMovie } = useMovie(dataMovie);\r\n\r\n  useEffect(() => {\r\n    fetchMovie({\r\n      url: `https://api.themoviedb.org/3${props.item}`,\r\n    });\r\n  }, [fetchMovie, dataMovie, props.item]);\r\n\r\n  return (\r\n    <MovieListFont>\r\n      <h1>Phim khinh dị</h1>\r\n      <ListMovieCP movies={movie} />\r\n    </MovieListFont>\r\n  );\r\n};\r\n\r\nexport default HorrorMovies;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport useMovie from \"../../../hook/use-Movie\";\r\nimport ListMovieCP from \"./ListMovieCP\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MovieListFont = styled.div`\r\n  width: 100%;\r\n  height: 250px;\r\n  overflow-x: scroll;\r\n  user-select: none;\r\n\r\n  & h1 {\r\n    color: white;\r\n  }\r\n\r\n  & ul {\r\n    width: auto;\r\n    padding-left: 0;\r\n    list-style: none;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-auto-columns: 14.5%;\r\n  }\r\n\r\n  & li {\r\n    max-width: 100%;\r\n    overflow: hidden;\r\n  }\r\n  & img {\r\n    max-width: 95%;\r\n  }\r\n\r\n  & li:hover img {\r\n    max-width: 100%;\r\n    transition: all 0.3s ease-in-out;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst RomanceMovies = (props) => {\r\n  const [movie, setMovie] = useState();\r\n  const dataMovie = useCallback((dataObj) => {\r\n    setMovie(dataObj);\r\n  }, []);\r\n\r\n  const { sendRequest: fetchMovie } = useMovie(dataMovie);\r\n\r\n  useEffect(() => {\r\n    fetchMovie({\r\n      url: `https://api.themoviedb.org/3${props.item}`,\r\n    });\r\n  }, [fetchMovie, props.item]);\r\n\r\n  return (\r\n    <MovieListFont>\r\n      <h1>Phim lang mạn</h1>\r\n      <ListMovieCP movies={movie} />\r\n    </MovieListFont>\r\n  );\r\n};\r\n\r\nexport default RomanceMovies;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport useMovie from \"../../../hook/use-Movie\";\r\nimport ListMovieCP from \"./ListMovieCP\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MovieListFont = styled.div`\r\n  width: 100%;\r\n  height: 250px;\r\n  overflow-x: scroll;\r\n  user-select: none;\r\n\r\n  & h1 {\r\n    color: white;\r\n  }\r\n\r\n  & ul {\r\n    width: auto;\r\n    padding-left: 0;\r\n    list-style: none;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-auto-columns: 14.5%;\r\n  }\r\n\r\n  & li {\r\n    max-width: 100%;\r\n    overflow: hidden;\r\n  }\r\n  & img {\r\n    max-width: 95%;\r\n  }\r\n\r\n  & li:hover img {\r\n    max-width: 100%;\r\n    transition: all 0.3s ease-in-out;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Documentaries = (props) => {\r\n  const [movie, setMovie] = useState();\r\n  const dataMovie = useCallback((dataObj) => {\r\n    setMovie(dataObj);\r\n  }, []);\r\n\r\n  const { sendRequest: fetchMovie } = useMovie(dataMovie);\r\n\r\n  useEffect(() => {\r\n    fetchMovie({\r\n      url: `https://api.themoviedb.org/3${props.item}`,\r\n    });\r\n  }, [fetchMovie, props.item]);\r\n\r\n  return (\r\n    <MovieListFont>\r\n      <h1>Phim tài liệu</h1>\r\n      <ListMovieCP movies={movie} />\r\n    </MovieListFont>\r\n  );\r\n};\r\n\r\nexport default Documentaries;\r\n","import React from \"react\";\r\n\r\nimport Originals from \"./Originals\";\r\nimport TopRated from \"./TopRated\";\r\nimport Trending from \"./Trending\";\r\nimport Action from \"./Action\";\r\nimport \"./MovieList.css\";\r\nimport ComedyMovies from \"./ComedyMovies\";\r\nimport HorrorMovies from \"./HorrorMovies\";\r\nimport RomanceMovies from \"./RomanceMovies\";\r\nimport Documentaries from \"./Documentaries\";\r\n\r\nconst MovieList = (props) => {\r\n  return (\r\n    <div className=\"movielist-font\">\r\n      <Originals item={props.originals} />\r\n      <Trending item={props.trending} />\r\n      <TopRated item={props.topRated} />\r\n      <Action item={props.actionMovies} />\r\n      <ComedyMovies item={props.comedyMovies} />\r\n      <HorrorMovies item={props.horrorMovies} />\r\n      <RomanceMovies item={props.romanceMovies} />\r\n      <Documentaries item={props.documentaries} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst backHome = () => {\r\n  window.location.replace(\"/\");\r\n};\r\nconst goSearch = () => {\r\n  window.location.replace(\"/search\");\r\n};\r\n\r\nconst FontNavbar = styled.div`\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n\r\n  & h1 {\r\n    width: 88%;\r\n    color: red;\r\n    margin-left: 2%;\r\n    float: left;\r\n    cursor: pointer;\r\n  }\r\n\r\n  & svg {\r\n    width: 10%;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nfunction NavBar() {\r\n  const [scroll, setScroll] = useState(0);\r\n\r\n  window.onscroll = function () {\r\n    setScroll(document.documentElement.scrollTop);\r\n  };\r\n\r\n  return (\r\n    <FontNavbar\r\n      style={{\r\n        background: scroll > 100 ? \"rgba(0, 0, 0)\" : \"rgba(0, 0, 0, 0)\",\r\n      }}\r\n    >\r\n      <h1 onClick={backHome}>Movie App</h1>\r\n      <svg\r\n        onClick={goSearch}\r\n        className=\"svg-inline--fa fa-search fa-w-16\"\r\n        fill=\"#ccc\"\r\n        aria-hidden=\"true\"\r\n        data-prefix=\"fas\"\r\n        data-icon=\"search\"\r\n        role=\"img\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"-800 -450 1900 1500\"\r\n      >\r\n        <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\r\n      </svg>\r\n    </FontNavbar>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useState, createContext } from \"react\";\nimport Banner from \"./banner/Banner\";\nimport MovieDetail from \"./moviedetail/MovieDetail\";\nimport MovieList from \"./movielist/MovieList\";\nimport NavBar from \"./navbar/NavBar\";\n\nexport const contextdata = createContext();\n\nfunction Browse() {\n  const API_KEY = \"ba4610f91015b61f18a06cae5722ec4a\";\n  const requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n    fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`,\n  };\n\n  const [handler, setHandler] = useState(null);\n\n  const openDetail = (movie) => setHandler(movie);\n\n  return (\n    <contextdata.Provider value={{ openDetail, handler }}>\n      <div>\n        <NavBar />\n        <Banner item={requests.fetchNetflixOriginals} />\n        <MovieList\n          originals={requests.fetchNetflixOriginals}\n          trending={requests.fetchTrending}\n          topRated={requests.fetchTopRated}\n          actionMovies={requests.fetchActionMovies}\n          comedyMovies={requests.fetchComedyMovies}\n          horrorMovies={requests.fetchHorrorMovies}\n          romanceMovies={requests.fetchRomanceMovies}\n          documentaries={requests.fetchDocumentaries}\n        />\n        <MovieDetail\n          movieData={handler}\n          showHandler={handler ? true : false}\n          API={API_KEY}\n        />\n      </div>\n    </contextdata.Provider>\n  );\n}\n\nexport default Browse;\n","import React, { useContext, useState } from \"react\";\r\nimport { contextdata } from \"./Search\";\r\nimport styled from \"styled-components\";\r\nconst SearchFormFont = styled.div`\r\n  width: 70%;\r\n  padding-top: 100px;\r\n  margin-left: 30%;\r\n\r\n  .div1 {\r\n    background-color: white;\r\n    width: 50%;\r\n    display: flex;\r\n    border-bottom-style: solid;\r\n    border-width: 6px;\r\n    border-color: rgba(28, 231, 231, 0.775);\r\n  }\r\n\r\n  .div1 input {\r\n    width: 87%;\r\n    border: none;\r\n    font-size: larger;\r\n    color: gray;\r\n  }\r\n\r\n  .div1 input:focus {\r\n    outline: none;\r\n  }\r\n  .div1 svg {\r\n    width: 13%;\r\n  }\r\n\r\n  .div2 {\r\n    width: 47%;\r\n    height: 40px;\r\n    background-color: white;\r\n    text-align: right;\r\n    padding-top: 3%;\r\n    padding-bottom: 3%;\r\n    padding-right: 3%;\r\n  }\r\n\r\n  .div2 .button1 {\r\n    height: 100%;\r\n    background-color: white;\r\n    border: none;\r\n    font-weight: 600;\r\n  }\r\n\r\n  .div2 .button2 {\r\n    height: 100%;\r\n    background-color: rgba(28, 231, 231, 0.775);\r\n    border: none;\r\n    font-weight: 600;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst SearchForm = () => {\r\n  const [values, setValues] = useState(\"\");\r\n\r\n  const search = useContext(contextdata);\r\n\r\n  const nameInputChangeHandler = (event) => {\r\n    setValues(event.target.value);\r\n  };\r\n\r\n  const getValue = () => {\r\n    return values !== \"\" && search.searchFilm(values);\r\n  };\r\n  const resetValue = () => {\r\n    return setValues(\"\");\r\n  };\r\n  if (values === \"\") {\r\n    search.searchFilm(\"\");\r\n  }\r\n\r\n  return (\r\n    <SearchFormFont>\r\n      <div className=\"div1\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={nameInputChangeHandler}\r\n          value={values}\r\n        />\r\n        <svg\r\n          className=\"svg-inline--fa fa-search fa-w-16\"\r\n          fill=\"#ccc\"\r\n          aria-hidden=\"true\"\r\n          data-prefix=\"fas\"\r\n          data-icon=\"search\"\r\n          role=\"img\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"-800 -450 1900 1500\"\r\n        >\r\n          <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\r\n        </svg>\r\n      </div>\r\n      <div className=\"div2\">\r\n        <button className=\"button1\" onClick={resetValue}>\r\n          RESET\r\n        </button>\r\n        <button className=\"button2\" onClick={getValue}>\r\n          SEARCH\r\n        </button>\r\n      </div>\r\n    </SearchFormFont>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { contextdata } from \"./Search\";\r\n\r\nconst MovieCP3 = (props) => {\r\n  const test = useContext(contextdata);\r\n\r\n  const openDetail = () => {\r\n    test.trailerDetailSearch({\r\n      key: props.id,\r\n      id: props.id,\r\n      backdrop: props.backdrop,\r\n      name: props.name,\r\n      date: props.date,\r\n      date2: props.date2,\r\n      vote: props.vote,\r\n      overview: props.overview,\r\n      title: props.title,\r\n    });\r\n  };\r\n\r\n  const closeDetail = () => {\r\n    test.trailerDetailSearch(null);\r\n  };\r\n\r\n  return (\r\n    <li\r\n      onClick={\r\n        (test.dataDetail === null && openDetail) ||\r\n        (test.dataDetail.id && test.dataDetail.id !== props.id && openDetail) ||\r\n        (test.dataDetail.id && test.dataDetail.id === props.id && closeDetail)\r\n      }\r\n    >\r\n      <img\r\n        src={\"https://image.tmdb.org/t/p/w500\" + props.poster}\r\n        alt={props.name}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MovieCP3;\r\n","import React from \"react\";\r\nimport MovieCP3 from \"./MovieCP3\";\r\n\r\nconst ListMovieCP3 = (props) => {\r\n  return (\r\n    <ul>\r\n      {props.movies &&\r\n        props.movies.map((data) => (\r\n          <MovieCP3\r\n            key={data.id}\r\n            id={data.id}\r\n            backdrop={data.backdrop}\r\n            poster={data.poster}\r\n            name={data.name}\r\n            date={data.date}\r\n            date2={data.date2}\r\n            vote={data.vote}\r\n            overview={data.overview}\r\n            title={data.title}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListMovieCP3;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport useMovie from \"../../hook/use-Movie\";\r\nimport ListMovieCP from \"./ListMovieCP3\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MovieListFont = styled.div`\r\n  width: 100%;\r\n\r\n  & h1 {\r\n    color: white;\r\n    user-select: none;\r\n  }\r\n\r\n  & h3 {\r\n    height: 700px;\r\n    color: white;\r\n    user-select: none;\r\n    text-align: center;\r\n  }\r\n  & ul {\r\n    width: auto;\r\n    padding-left: 0;\r\n    list-style: none;\r\n    display: grid;\r\n    grid-template-columns: auto auto auto auto auto auto auto auto auto;\r\n    gap: 5px;\r\n    user-select: none;\r\n    overflow: hidden;\r\n  }\r\n\r\n  & li {\r\n    max-width: 100%;\r\n    overflow: hidden;\r\n  }\r\n  & img {\r\n    max-width: 90%;\r\n  }\r\n\r\n  & li:hover img {\r\n    max-width: 100%;\r\n    transition: all 0.3s ease-in-out;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst ResultList = (props) => {\r\n  const [movie, setMovie] = useState();\r\n  const dataMovie = useCallback((dataObj) => {\r\n    setMovie(dataObj);\r\n  }, []);\r\n  const { error, sendRequest: fetchMovie } = useMovie(dataMovie);\r\n\r\n  useEffect(() => {\r\n    fetchMovie({\r\n      url: `https://api.themoviedb.org/3/search/movie?api_key=${props.KEY}&language=en-US&query=${props.name}&page=1&include_adult=false`,\r\n    });\r\n  }, [fetchMovie, props.KEY, props.name]);\r\n\r\n  return (\r\n    <MovieListFont>\r\n      <h1>Search Result</h1>\r\n      {!error && <ListMovieCP movies={movie} />}\r\n      {error && <h3>Haven't searched for movies yet!</h3>}\r\n    </MovieListFont>\r\n  );\r\n};\r\n\r\nexport default ResultList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nconst MovieTrailer2 = (props) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const sendRequest2 = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3//movie/${props.id}}/videos?api_key=${props.API}`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n      const data = await response.json();\r\n\r\n      const dataTrailer = [];\r\n\r\n      for (const key in data.results) {\r\n        dataTrailer.push({\r\n          site: data.results[key].site,\r\n          key: data.results[key].key,\r\n          type: data.results[key].type,\r\n        });\r\n      }\r\n\r\n      setData(dataTrailer);\r\n    } catch (error) {}\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    sendRequest2();\r\n  }, [sendRequest2]);\r\n\r\n  const filterTrailer = data.filter((x) => {\r\n    return x.site === \"YouTube\" && x.type === (\"Trailer\" || \"Teaser\");\r\n  });\r\n\r\n  const video = () => {\r\n    if (filterTrailer.length > 0) {\r\n      return \"https://www.youtube.com/embed/\" + filterTrailer[0].key;\r\n    } else {\r\n      return \"https://image.tmdb.org/t/p/w500\" + props.backdrop;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <iframe width=\"100%\" height=\"400\" src={video()} title=\"trailer\"></iframe>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default React.memo(MovieTrailer2);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MovieTrailer2 from \"./MovieTrailer2\";\r\nimport { useContext } from \"react\";\r\nimport { contextdata } from \"./Search\";\r\n\r\nconst MovieDetailFont = styled.div`\r\n  display: ${(props) => (props.item === true ? \"block\" : \"none\")};\r\n  width: 100%;\r\n\r\n  .div1 {\r\n    width: 100%;\r\n    display: flex;\r\n    background-color: black;\r\n    overflow: hidden;\r\n    position: fixed;\r\n    top: 40%;\r\n    left: 0%;\r\n    height: 60%;\r\n  }\r\n\r\n  .div2 {\r\n    width: 50%;\r\n    color: white;\r\n  }\r\n  .div2 h1 {\r\n    border-bottom-style: solid;\r\n    border-bottom-width: 5px;\r\n    border-color: gray;\r\n  }\r\n\r\n  .div3 {\r\n    width: 50%;\r\n    align-self: center;\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nconst MovieDetail2 = (props) => {\r\n  const closes = useContext(contextdata);\r\n\r\n  const close = () => closes.trailerDetailSearch(null);\r\n\r\n  let name = \"name\";\r\n  if (props.movieData) {\r\n    name =\r\n      props.movieData.name !== undefined\r\n        ? props.movieData.name\r\n        : props.movieData.title;\r\n  }\r\n  let date = \"date\";\r\n  if (props.movieData) {\r\n    date =\r\n      props.movieData.date !== undefined\r\n        ? props.movieData.date\r\n        : props.movieData.date2;\r\n  }\r\n  let vote = \"vote\";\r\n  if (props.movieData) {\r\n    vote = props.movieData.vote;\r\n  }\r\n  let overview = \"overview\";\r\n  if (props.movieData) {\r\n    overview = props.movieData.overview;\r\n  }\r\n\r\n  return (\r\n    <MovieDetailFont item={props.showHandler}>\r\n      <div className=\"div1\">\r\n        <div className=\"div2\">\r\n          <h1>{name}</h1>\r\n          <h4>{date}</h4>\r\n          <h4>{vote}/10</h4>\r\n          <p>{overview}</p>\r\n        </div>\r\n        <div className=\"div3\">\r\n          <button onClick={close}>\r\n            <b>Closes</b>\r\n          </button>\r\n          <MovieTrailer2\r\n            API={props.API}\r\n            id={props.movieData ? props.movieData.id : \"\"}\r\n            backdrop={props.movieData ? props.movieData.backdrop : \"\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </MovieDetailFont>\r\n  );\r\n};\r\n\r\nexport default MovieDetail2;\r\n","import React, { useState, createContext } from \"react\";\nimport NavBar from \"../browse/navbar/NavBar\";\nimport styled from \"styled-components\";\nimport SearchForm from \"./SearchForm\";\nimport ResultList from \"./ResultList\";\nimport MovieDetail2 from \"./MovieDetail2\";\n\nexport const contextdata = createContext();\n\nconst SearchFont = styled.div`\n  background-color: black;\n  }\n`;\n\nconst Search = () => {\n  const [nameFilm, setNameFilm] = useState(\"\");\n  const [dataDetail, setDataDetail] = useState(null);\n\n  const searchFilm = (name) => setNameFilm(name);\n\n  const trailerDetailSearch = (data) => setDataDetail(data);\n\n  const API_KEY = \"ba4610f91015b61f18a06cae5722ec4a\";\n\n  return (\n    <contextdata.Provider\n      value={{ searchFilm, trailerDetailSearch, dataDetail }}\n    >\n      <SearchFont>\n        <NavBar />\n        <SearchForm />\n        <ResultList KEY={API_KEY} name={nameFilm !== \"\" ? nameFilm : \"\"} />\n        <MovieDetail2\n          movieData={dataDetail}\n          showHandler={dataDetail ? true : false}\n          API={API_KEY}\n        />\n      </SearchFont>\n    </contextdata.Provider>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Browse from \"./pages/browse/Browse\";\nimport Search from \"./pages/search/Search\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Browse />} />\n        <Route path=\"/search\" element={<Search />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}